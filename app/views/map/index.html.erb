# <!DOCTYPE html>
# <html>
#   <head>
#     <title>Your Map Page</title>

#     <link rel="stylesheet" href="map.css">
#   </head>
  
#   <body>
    
#     <div id="map"></div>

#     <script src="maps.js"></script>
#   </body>
# </html>
<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossorigin=""/>
        
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>

        <style>
            #map { height: 350px; }
            #map { height: 400px; }
            #add-to-itinerary-button { font-weight: normal; color: gray; }
            #add-to-itinerary-button.active { font-weight: bold; color: green; }
        </style>
    </head>

    <body>

        <input type="text" id="locationInput" placeholder="Search for a location">
        <button onclick="searchLocation()">Search</button>
        <button onclick="liveLocation()">Current Location</button>
        <button id="add-to-itinerary-button" onclick="addToItinerary()">Add to Itinerary</button>
        <div id="map"></div>
        
    </body>

    <script>
        
        var map = L.map('map');
        map.setView([51.505, -0.09], 13);

        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);


        navigator.geolocation.watchPosition(success, error);

        let marker, circle, zoomed; 

        function success(pos){

            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;
            const accuracy = pos.coords.accuracy;

            if(marker){
                map.removeLayer(marker);
            }
            
            marker = L.marker([lat,lng]).addTo(map);
            circle = L.circle([lat,lng],{radius:accuracy}).addTo(map);
            
            map.fitBounds(circle.getBounds());

        }

        function error(err){

            if(err.code ===1){
                alert("Please Allow Geoloaction Access")
            }else{
                alert("Can not get Current Location")
            }
        }

        function searchLocation() {
            const locationInput = document.getElementById('locationInput').value;
          
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${locationInput}`)
              .then(response => response.json())
              .then(data => {
                if (data && data.length > 0) {
                  const result = data[0];
                  const lat = result.lat;
                  const lon = result.lon;
          
                  map.setView([lat, lon], 13);
                } else {
                  alert('Location not found');
                }
              })
              .catch(error => {
                console.error('Error fetching location data:', error);
              });
          }
          
        function liveLocation() {
            if (circle) {
                map.fitBounds(circle.getBounds());
            } else {
                alert('Current location not available.');
            }
        }
        
        var chosen_markers = [];
        var selectedMarker = null;

        function addMarker(lat, lng) {
            const newMarker = L.marker([lat, lng]).addTo(map);

            newMarker.on('click', function () {
                selectedMarker = newMarker;
                updateButtonStyle();
            });

            chosen_markers.push(newMarker);
        }

        map.on('click', function (e) {
            const lat = e.latlng.lat;
            const lng = e.latlng.lng;
        
            addMarker(lat, lng);
        });

        function addToItinerary() {
            if (selectedMarker) {
                const lat = selectedMarker.getLatLng().lat;
                const lng = selectedMarker.getLatLng().lng;
                console.log(`Adding marker to itinerary: Lat ${lat}, Lng ${lng}`);
                selectedMarker = null;
                updateButtonStyle();
            } else {
                alert('Please select a marker.');
            }
        }

        function updateButtonStyle() {
            const button = document.getElementById('add-to-itinerary-button');
            if (selectedMarker) {
                button.classList.add('active');
            } else {
                button.classList.remove('active');
            }
        }


    </script>

</html>
